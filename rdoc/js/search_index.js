var search_data = {"index":{"searchIndex":["object","urbanopt","reopt","extension","featurereportadapter","reoptliteapi","reoptrunner","scenarioreportadapter","scenario","defaultreports","constructioncost","date","enduse","enduses","extension","featurereport","location","program","reportingperiod","scenarioreport","timeseriescsv","extension","openstudio","extension","reoptscenariocsv","scenariobase","scenariocsv","scenariodatapoint","scenariodefaultpostprocessor","scenariodefaultreoptpostprocessor","scenariopostprocessorbase","scenariorunnerbase","scenariorunnerosw","simulationdirbase","simulationdirosw","simulationmapperbase","add_feature_report()","add_program()","add_simulation_dir()","add_simulation_dir()","add_timeseries_csv()","add_values()","add_values()","check_connection()","clear()","clear()","clear()","clear()","create_input_files()","create_input_files()","create_osw()","create_osw()","create_simulation_files()","create_simulation_files()","csv_path()","defaults()","defaults()","defaults()","defaults()","defaults()","defaults()","defaults()","defaults()","defaults()","defaults()","doc_templates_dir()","doc_templates_dir()","failed_job_path()","feature_type()","files_dir()","files_dir()","finished_job_path()","from_simulation_dir()","get_data()","in_osw()","in_osw_path()","json_path()","load_data()","load_mapper_files()","logger()","logger()","max_value()","measures_dir()","measures_dir()","merge_construction_cost()","merge_construction_costs()","merge_end_use!()","merge_end_uses!()","merge_reporting_period()","merge_reporting_periods()","modrow()","modrow()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","out_of_date?()","out_of_date?()","out_of_date?()","out_osw()","out_osw_path()","reopt_json_from_feature_report()","reopt_json_from_scenario_report()","reopt_jsons_from_scenario_feature_reports()","reopt_request()","run()","run()","run()","run()","run()","run_dir()","run_dir()","run_dir()","run_dir_name()","run_feature_report()","run_feature_reports()","run_scenario_report()","run_scenario_report_features()","save()","save()","save()","save_data()","schema()","schema_file()","schema_valid?()","schema_validation_errors()","simulation_dirs()","simulation_dirs()","simulation_dirs()","simulation_status()","simulation_status()","started_job_path()","to_hash()","to_hash()","to_hash()","to_hash()","to_hash()","to_hash()","to_hash()","to_hash()","to_hash()","to_hash()","update_feature_report()","update_scenario_report()","update_scenario_report_from_feature_reports()","uri_results()","validate()","zerorow()","rdoc_main","scenario_csv_columns","scenario_schema.json","npm-debug.log","package-lock.json"],"longSearchIndex":["object","urbanopt","urbanopt::reopt","urbanopt::reopt::extension","urbanopt::reopt::featurereportadapter","urbanopt::reopt::reoptliteapi","urbanopt::reopt::reoptrunner","urbanopt::reopt::scenarioreportadapter","urbanopt::scenario","urbanopt::scenario::defaultreports","urbanopt::scenario::defaultreports::constructioncost","urbanopt::scenario::defaultreports::date","urbanopt::scenario::defaultreports::enduse","urbanopt::scenario::defaultreports::enduses","urbanopt::scenario::defaultreports::extension","urbanopt::scenario::defaultreports::featurereport","urbanopt::scenario::defaultreports::location","urbanopt::scenario::defaultreports::program","urbanopt::scenario::defaultreports::reportingperiod","urbanopt::scenario::defaultreports::scenarioreport","urbanopt::scenario::defaultreports::timeseriescsv","urbanopt::scenario::extension","urbanopt::scenario::extension::openstudio","urbanopt::scenario::extension::openstudio::extension","urbanopt::scenario::reoptscenariocsv","urbanopt::scenario::scenariobase","urbanopt::scenario::scenariocsv","urbanopt::scenario::scenariodatapoint","urbanopt::scenario::scenariodefaultpostprocessor","urbanopt::scenario::scenariodefaultreoptpostprocessor","urbanopt::scenario::scenariopostprocessorbase","urbanopt::scenario::scenariorunnerbase","urbanopt::scenario::scenariorunnerosw","urbanopt::scenario::simulationdirbase","urbanopt::scenario::simulationdirosw","urbanopt::scenario::simulationmapperbase","urbanopt::scenario::defaultreports::scenarioreport#add_feature_report()","urbanopt::scenario::defaultreports::program#add_program()","urbanopt::scenario::scenariodefaultpostprocessor#add_simulation_dir()","urbanopt::scenario::scenariopostprocessorbase#add_simulation_dir()","urbanopt::scenario::defaultreports::timeseriescsv#add_timeseries_csv()","urbanopt::scenario::defaultreports::program#add_values()","urbanopt::scenario::defaultreports::reportingperiod::add_values()","urbanopt::reopt::reoptliteapi#check_connection()","urbanopt::scenario::scenariobase#clear()","urbanopt::scenario::scenariodatapoint#clear()","urbanopt::scenario::simulationdirbase#clear()","urbanopt::scenario::simulationdirosw#clear()","urbanopt::scenario::simulationdirbase#create_input_files()","urbanopt::scenario::simulationdirosw#create_input_files()","urbanopt::scenario::scenariodatapoint#create_osw()","urbanopt::scenario::simulationmapperbase#create_osw()","urbanopt::scenario::scenariorunnerbase#create_simulation_files()","urbanopt::scenario::scenariorunnerosw#create_simulation_files()","urbanopt::scenario::defaultreports::scenarioreport#csv_path()","urbanopt::scenario::defaultreports::constructioncost#defaults()","urbanopt::scenario::defaultreports::date#defaults()","urbanopt::scenario::defaultreports::enduse#defaults()","urbanopt::scenario::defaultreports::enduses#defaults()","urbanopt::scenario::defaultreports::featurereport#defaults()","urbanopt::scenario::defaultreports::location#defaults()","urbanopt::scenario::defaultreports::program#defaults()","urbanopt::scenario::defaultreports::reportingperiod#defaults()","urbanopt::scenario::defaultreports::scenarioreport#defaults()","urbanopt::scenario::defaultreports::timeseriescsv#defaults()","urbanopt::scenario::defaultreports::extension#doc_templates_dir()","urbanopt::scenario::extension#doc_templates_dir()","urbanopt::scenario::simulationdirosw#failed_job_path()","urbanopt::scenario::scenariodatapoint#feature_type()","urbanopt::scenario::defaultreports::extension#files_dir()","urbanopt::scenario::extension#files_dir()","urbanopt::scenario::simulationdirosw#finished_job_path()","urbanopt::scenario::defaultreports::featurereport::from_simulation_dir()","urbanopt::scenario::defaultreports::timeseriescsv#get_data()","urbanopt::scenario::simulationdirosw#in_osw()","urbanopt::scenario::simulationdirosw#in_osw_path()","urbanopt::scenario::defaultreports::scenarioreport#json_path()","urbanopt::scenario::defaultreports::timeseriescsv#load_data()","urbanopt::scenario::scenariocsv#load_mapper_files()","urbanopt::scenario::logger()","urbanopt::scenario::defaultreports::logger()","urbanopt::scenario::defaultreports::program#max_value()","urbanopt::scenario::defaultreports::extension#measures_dir()","urbanopt::scenario::extension#measures_dir()","urbanopt::scenario::defaultreports::constructioncost::merge_construction_cost()","urbanopt::scenario::defaultreports::constructioncost::merge_construction_costs()","urbanopt::scenario::defaultreports::enduse#merge_end_use!()","urbanopt::scenario::defaultreports::enduses#merge_end_uses!()","urbanopt::scenario::defaultreports::reportingperiod::merge_reporting_period()","urbanopt::scenario::defaultreports::reportingperiod::merge_reporting_periods()","urbanopt::reopt::featurereportadapter#modrow()","urbanopt::reopt::scenarioreportadapter#modrow()","urbanopt::reopt::extension::new()","urbanopt::reopt::featurereportadapter::new()","urbanopt::reopt::reoptliteapi::new()","urbanopt::reopt::reoptrunner::new()","urbanopt::reopt::scenarioreportadapter::new()","urbanopt::scenario::defaultreports::constructioncost::new()","urbanopt::scenario::defaultreports::date::new()","urbanopt::scenario::defaultreports::enduse::new()","urbanopt::scenario::defaultreports::enduses::new()","urbanopt::scenario::defaultreports::extension::new()","urbanopt::scenario::defaultreports::featurereport::new()","urbanopt::scenario::defaultreports::location::new()","urbanopt::scenario::defaultreports::program::new()","urbanopt::scenario::defaultreports::reportingperiod::new()","urbanopt::scenario::defaultreports::scenarioreport::new()","urbanopt::scenario::defaultreports::timeseriescsv::new()","urbanopt::scenario::extension::new()","urbanopt::scenario::reoptscenariocsv::new()","urbanopt::scenario::scenariobase::new()","urbanopt::scenario::scenariocsv::new()","urbanopt::scenario::scenariodatapoint::new()","urbanopt::scenario::scenariodefaultpostprocessor::new()","urbanopt::scenario::scenariodefaultreoptpostprocessor::new()","urbanopt::scenario::scenariopostprocessorbase::new()","urbanopt::scenario::scenariorunnerbase::new()","urbanopt::scenario::scenariorunnerosw::new()","urbanopt::scenario::simulationdirbase::new()","urbanopt::scenario::simulationdirosw::new()","urbanopt::scenario::simulationmapperbase::new()","urbanopt::scenario::scenariodatapoint#out_of_date?()","urbanopt::scenario::simulationdirbase#out_of_date?()","urbanopt::scenario::simulationdirosw#out_of_date?()","urbanopt::scenario::simulationdirosw#out_osw()","urbanopt::scenario::simulationdirosw#out_osw_path()","urbanopt::reopt::featurereportadapter#reopt_json_from_feature_report()","urbanopt::reopt::scenarioreportadapter#reopt_json_from_scenario_report()","urbanopt::reopt::scenarioreportadapter#reopt_jsons_from_scenario_feature_reports()","urbanopt::reopt::reoptliteapi#reopt_request()","urbanopt::scenario::scenariodefaultpostprocessor#run()","urbanopt::scenario::scenariodefaultreoptpostprocessor#run()","urbanopt::scenario::scenariopostprocessorbase#run()","urbanopt::scenario::scenariorunnerbase#run()","urbanopt::scenario::scenariorunnerosw#run()","urbanopt::scenario::scenariodatapoint#run_dir()","urbanopt::scenario::simulationdirbase#run_dir()","urbanopt::scenario::simulationdirosw#run_dir()","urbanopt::scenario::defaultreports::timeseriescsv#run_dir_name()","urbanopt::reopt::reoptrunner#run_feature_report()","urbanopt::reopt::reoptrunner#run_feature_reports()","urbanopt::reopt::reoptrunner#run_scenario_report()","urbanopt::reopt::reoptrunner#run_scenario_report_features()","urbanopt::scenario::defaultreports::scenarioreport#save()","urbanopt::scenario::scenariodefaultpostprocessor#save()","urbanopt::scenario::scenariopostprocessorbase#save()","urbanopt::scenario::defaultreports::timeseriescsv#save_data()","urbanopt::scenario::defaultreports::extension#schema()","urbanopt::scenario::defaultreports::extension#schema_file()","urbanopt::scenario::defaultreports::extension#schema_valid?()","urbanopt::scenario::defaultreports::extension#schema_validation_errors()","urbanopt::scenario::reoptscenariocsv#simulation_dirs()","urbanopt::scenario::scenariobase#simulation_dirs()","urbanopt::scenario::scenariocsv#simulation_dirs()","urbanopt::scenario::simulationdirbase#simulation_status()","urbanopt::scenario::simulationdirosw#simulation_status()","urbanopt::scenario::simulationdirosw#started_job_path()","urbanopt::scenario::defaultreports::constructioncost#to_hash()","urbanopt::scenario::defaultreports::date#to_hash()","urbanopt::scenario::defaultreports::enduse#to_hash()","urbanopt::scenario::defaultreports::enduses#to_hash()","urbanopt::scenario::defaultreports::featurereport#to_hash()","urbanopt::scenario::defaultreports::location#to_hash()","urbanopt::scenario::defaultreports::program#to_hash()","urbanopt::scenario::defaultreports::reportingperiod#to_hash()","urbanopt::scenario::defaultreports::scenarioreport#to_hash()","urbanopt::scenario::defaultreports::timeseriescsv#to_hash()","urbanopt::reopt::featurereportadapter#update_feature_report()","urbanopt::reopt::scenarioreportadapter#update_scenario_report()","urbanopt::reopt::scenarioreportadapter#update_scenario_report_from_feature_reports()","urbanopt::reopt::reoptliteapi#uri_results()","urbanopt::scenario::defaultreports::extension#validate()","urbanopt::reopt::scenarioreportadapter#zerorow()","","","","",""],"info":[["Object","","Object.html","",""],["URBANopt","","URBANopt.html","","<p>*******************************************************************************\nOpenStudio(R), Copyright ...\n"],["URBANopt::REopt","","URBANopt/REopt.html","",""],["URBANopt::REopt::Extension","","URBANopt/REopt/Extension.html","",""],["URBANopt::REopt::FeatureReportAdapter","","URBANopt/REopt/FeatureReportAdapter.html","",""],["URBANopt::REopt::REoptLiteAPI","","URBANopt/REopt/REoptLiteAPI.html","",""],["URBANopt::REopt::REoptRunner","","URBANopt/REopt/REoptRunner.html","",""],["URBANopt::REopt::ScenarioReportAdapter","","URBANopt/REopt/ScenarioReportAdapter.html","",""],["URBANopt::Scenario","","URBANopt/Scenario.html","",""],["URBANopt::Scenario::DefaultReports","","URBANopt/Scenario/DefaultReports.html","",""],["URBANopt::Scenario::DefaultReports::ConstructionCost","","URBANopt/Scenario/DefaultReports/ConstructionCost.html","","<p>ConstructionCost include construction cost information.\n"],["URBANopt::Scenario::DefaultReports::Date","","URBANopt/Scenario/DefaultReports/Date.html","","<p>Date class include information of simulation run date.\n"],["URBANopt::Scenario::DefaultReports::EndUse","","URBANopt/Scenario/DefaultReports/EndUse.html","","<p>Enduse class all enduse energy consumption results.\n"],["URBANopt::Scenario::DefaultReports::EndUses","","URBANopt/Scenario/DefaultReports/EndUses.html","","<p>Enduses class inlclude results for each fuel type.\n"],["URBANopt::Scenario::DefaultReports::Extension","","URBANopt/Scenario/DefaultReports/Extension.html","",""],["URBANopt::Scenario::DefaultReports::FeatureReport","","URBANopt/Scenario/DefaultReports/FeatureReport.html","","<p>FeatureReport generates two types of reports in a simulation_dir.\nThe default_feature_reports measure ...\n"],["URBANopt::Scenario::DefaultReports::Location","","URBANopt/Scenario/DefaultReports/Location.html","","<p>Location include all location information.\n"],["URBANopt::Scenario::DefaultReports::Program","","URBANopt/Scenario/DefaultReports/Program.html","","<p>Program includes all building program related information.\n"],["URBANopt::Scenario::DefaultReports::ReportingPeriod","","URBANopt/Scenario/DefaultReports/ReportingPeriod.html","","<p>ReportingPeriod includes all the results of a specific reporting period.\n"],["URBANopt::Scenario::DefaultReports::ScenarioReport","","URBANopt/Scenario/DefaultReports/ScenarioReport.html","","<p>ScenarioReport can generate two types of reports from a scenario.\nThe first is a JSON format saved to ...\n"],["URBANopt::Scenario::DefaultReports::TimeseriesCSV","","URBANopt/Scenario/DefaultReports/TimeseriesCSV.html","","<p>TimeseriesCSV include timesries reults reported in a CSV file.\n"],["URBANopt::Scenario::Extension","","URBANopt/Scenario/Extension.html","",""],["URBANopt::Scenario::Extension::OpenStudio","","URBANopt/Scenario/Extension/OpenStudio.html","",""],["URBANopt::Scenario::Extension::OpenStudio::Extension","","URBANopt/Scenario/Extension/OpenStudio/Extension.html","",""],["URBANopt::Scenario::REoptScenarioCSV","","URBANopt/Scenario/REoptScenarioCSV.html","",""],["URBANopt::Scenario::ScenarioBase","","URBANopt/Scenario/ScenarioBase.html","","<p>ScenarioBase is a simulation method agnostic description of a Scenario.\n"],["URBANopt::Scenario::ScenarioCSV","","URBANopt/Scenario/ScenarioCSV.html","",""],["URBANopt::Scenario::ScenarioDatapoint","","URBANopt/Scenario/ScenarioDatapoint.html","",""],["URBANopt::Scenario::ScenarioDefaultPostProcessor","","URBANopt/Scenario/ScenarioDefaultPostProcessor.html","",""],["URBANopt::Scenario::ScenarioDefaultREoptPostProcessor","","URBANopt/Scenario/ScenarioDefaultREoptPostProcessor.html","",""],["URBANopt::Scenario::ScenarioPostProcessorBase","","URBANopt/Scenario/ScenarioPostProcessorBase.html","",""],["URBANopt::Scenario::ScenarioRunnerBase","","URBANopt/Scenario/ScenarioRunnerBase.html","",""],["URBANopt::Scenario::ScenarioRunnerOSW","","URBANopt/Scenario/ScenarioRunnerOSW.html","",""],["URBANopt::Scenario::SimulationDirBase","","URBANopt/Scenario/SimulationDirBase.html","",""],["URBANopt::Scenario::SimulationDirOSW","","URBANopt/Scenario/SimulationDirOSW.html","",""],["URBANopt::Scenario::SimulationMapperBase","","URBANopt/Scenario/SimulationMapperBase.html","",""],["add_feature_report","URBANopt::Scenario::DefaultReports::ScenarioReport","URBANopt/Scenario/DefaultReports/ScenarioReport.html#method-i-add_feature_report","(feature_report)","<p>Add feature reports to each other.\n<p>check if a feature report have been already added.\n<p>check feature simulation …\n"],["add_program","URBANopt::Scenario::DefaultReports::Program","URBANopt/Scenario/DefaultReports/Program.html#method-i-add_program","(other)","<p>Merges program objects to each other by summing up values or taking the maximum value of the attributes. …\n"],["add_simulation_dir","URBANopt::Scenario::ScenarioDefaultPostProcessor","URBANopt/Scenario/ScenarioDefaultPostProcessor.html#method-i-add_simulation_dir","(simulation_dir)","<p>Add results from a simulation_dir to this result.\n<p>[parameters:]\n<code>simulation_dir</code> - <em>SimulationDirOSW</em> - An ...\n"],["add_simulation_dir","URBANopt::Scenario::ScenarioPostProcessorBase","URBANopt/Scenario/ScenarioPostProcessorBase.html#method-i-add_simulation_dir","(simulation_dir)","<p>Add results from a simulation_dir to this result.\n<p>[parameters:]\n<code>simulation_dir</code> - <em>SimulationDirOSW</em> - An ...\n"],["add_timeseries_csv","URBANopt::Scenario::DefaultReports::TimeseriesCSV","URBANopt/Scenario/DefaultReports/TimeseriesCSV.html#method-i-add_timeseries_csv","(other)","<p>Merges timeseries csv to each other.\n<p>initialize first_report_datetime with the incoming first_report_datetime …\n"],["add_values","URBANopt::Scenario::DefaultReports::Program","URBANopt/Scenario/DefaultReports/Program.html#method-i-add_values","(existing_value, new_value)","<p>Adds up <code>existing_value</code> and <code>new_values</code> if not nill.\n<p>[parameters:]\n<code>existing_value</code> - <em>Float</em> - A value corresponding ...\n"],["add_values","URBANopt::Scenario::DefaultReports::ReportingPeriod","URBANopt/Scenario/DefaultReports/ReportingPeriod.html#method-c-add_values","(existing_value, new_value)","<p>Adds up <code>existing_value</code> and <code>new_values</code> if not nill.\n<p>[parameter:]\n<code>existing_value</code> - <em>Float</em> - A value corresponding ...\n"],["check_connection","URBANopt::REopt::REoptLiteAPI","URBANopt/REopt/REoptLiteAPI.html#method-i-check_connection","(data)","<p>Checks if a optimization task can be submitted to the REopt Lite API\n<p>[parameters:]\n<code>data</code> - <em>Hash</em> - Default ...\n"],["clear","URBANopt::Scenario::ScenarioBase","URBANopt/Scenario/ScenarioBase.html#method-i-clear","()","<p>Removes all simulation input and output files by removing this Scenario&#39;s <code>run_dir</code> .\n"],["clear","URBANopt::Scenario::ScenarioDatapoint","URBANopt/Scenario/ScenarioDatapoint.html#method-i-clear","()","<p>Return the directory that this datapoint will run in.\n"],["clear","URBANopt::Scenario::SimulationDirBase","URBANopt/Scenario/SimulationDirBase.html#method-i-clear","()","<p>Clear the directory that this simulation runs in\n"],["clear","URBANopt::Scenario::SimulationDirOSW","URBANopt/Scenario/SimulationDirOSW.html#method-i-clear","()","<p>Clear the directory that this simulation runs in\n"],["create_input_files","URBANopt::Scenario::SimulationDirBase","URBANopt/Scenario/SimulationDirBase.html#method-i-create_input_files","()","<p>Create run directory and generate simulation inputs, all previous contents of directory are removed\n"],["create_input_files","URBANopt::Scenario::SimulationDirOSW","URBANopt/Scenario/SimulationDirOSW.html#method-i-create_input_files","()","<p>Create run directory and generate simulation OSW, all previous contents of directory are removed\nThe ...\n"],["create_osw","URBANopt::Scenario::ScenarioDatapoint","URBANopt/Scenario/ScenarioDatapoint.html#method-i-create_osw","()","<p>Create run directory and generate simulation OSW, all previous contents of directory are removed\nThe ...\n"],["create_osw","URBANopt::Scenario::SimulationMapperBase","URBANopt/Scenario/SimulationMapperBase.html#method-i-create_osw","(scenario, features, feature_names)","<p>create osw file given a ScenarioBase object, features, and feature_names\n[parameters:]\n<code>scenario</code> - <em>ScenarioBase</em> ...\n"],["create_simulation_files","URBANopt::Scenario::ScenarioRunnerBase","URBANopt/Scenario/ScenarioRunnerBase.html#method-i-create_simulation_files","(scenario, force_clear = false)","<p>Create all SimulationDirs for Scenario.\n<p>[parameters:]\n<code>scenario</code> - <em>ScenarioBase</em> - Scenario to create simulation ...\n"],["create_simulation_files","URBANopt::Scenario::ScenarioRunnerOSW","URBANopt/Scenario/ScenarioRunnerOSW.html#method-i-create_simulation_files","(scenario, force_clear = false)","<p>Create all OSWs for Scenario.\n<p>[parameters:]\n<code>scenario</code> - <em>ScenarioBase</em> - Scenario to create simulation input ...\n"],["csv_path","URBANopt::Scenario::DefaultReports::ScenarioReport","URBANopt/Scenario/DefaultReports/ScenarioReport.html#method-i-csv_path","()","<p>Gets the saved CSV file path.\n"],["defaults","URBANopt::Scenario::DefaultReports::ConstructionCost","URBANopt/Scenario/DefaultReports/ConstructionCost.html#method-i-defaults","()","<p>Assigns default values if attribute values do not exist.\n"],["defaults","URBANopt::Scenario::DefaultReports::Date","URBANopt/Scenario/DefaultReports/Date.html#method-i-defaults","()","<p>Assigns default values if values do not exist.\n"],["defaults","URBANopt::Scenario::DefaultReports::EndUse","URBANopt/Scenario/DefaultReports/EndUse.html#method-i-defaults","()","<p>Assign default values if values does not exist\n"],["defaults","URBANopt::Scenario::DefaultReports::EndUses","URBANopt/Scenario/DefaultReports/EndUses.html#method-i-defaults","()","<p>Assigns default values if values do not exist.\n"],["defaults","URBANopt::Scenario::DefaultReports::FeatureReport","URBANopt/Scenario/DefaultReports/FeatureReport.html#method-i-defaults","()","<p>Assign default values if values does not exist.\n"],["defaults","URBANopt::Scenario::DefaultReports::Location","URBANopt/Scenario/DefaultReports/Location.html#method-i-defaults","()","<p>Assign default values if values does not exist\n"],["defaults","URBANopt::Scenario::DefaultReports::Program","URBANopt/Scenario/DefaultReports/Program.html#method-i-defaults","()","<p>Assigns default values if values do not exist.\n"],["defaults","URBANopt::Scenario::DefaultReports::ReportingPeriod","URBANopt/Scenario/DefaultReports/ReportingPeriod.html#method-i-defaults","()","<p>Assigns default values if values do not exist.\n"],["defaults","URBANopt::Scenario::DefaultReports::ScenarioReport","URBANopt/Scenario/DefaultReports/ScenarioReport.html#method-i-defaults","()","<p>Assigns default values if values do not exist.\n"],["defaults","URBANopt::Scenario::DefaultReports::TimeseriesCSV","URBANopt/Scenario/DefaultReports/TimeseriesCSV.html#method-i-defaults","()","<p>Assigns default values if values does not exist.\n"],["doc_templates_dir","URBANopt::Scenario::DefaultReports::Extension","URBANopt/Scenario/DefaultReports/Extension.html#method-i-doc_templates_dir","()","<p>Doc templates are common files like copyright files which are used to update measures and other code …\n"],["doc_templates_dir","URBANopt::Scenario::Extension","URBANopt/Scenario/Extension.html#method-i-doc_templates_dir","()","<p>Doc templates are common files like copyright files which are used to update measures and other code. …\n"],["failed_job_path","URBANopt::Scenario::SimulationDirOSW","URBANopt/Scenario/SimulationDirOSW.html#method-i-failed_job_path","()","<p>Return the failed.job path\n"],["feature_type","URBANopt::Scenario::ScenarioDatapoint","URBANopt/Scenario/ScenarioDatapoint.html#method-i-feature_type","()","<p>Gets the type of a feature\n"],["files_dir","URBANopt::Scenario::DefaultReports::Extension","URBANopt/Scenario/DefaultReports/Extension.html#method-i-files_dir","()","<p>Relevant files such as weather data, design days, etc.\nReturn the absolute path of the files or nil if ...\n"],["files_dir","URBANopt::Scenario::Extension","URBANopt/Scenario/Extension.html#method-i-files_dir","()","<p>Relevant files such as weather data, design days, etc.\nReturn the absolute path of the files or nil if ...\n"],["finished_job_path","URBANopt::Scenario::SimulationDirOSW","URBANopt/Scenario/SimulationDirOSW.html#method-i-finished_job_path","()","<p>Return the finished.job path\n"],["from_simulation_dir","URBANopt::Scenario::DefaultReports::FeatureReport","URBANopt/Scenario/DefaultReports/FeatureReport.html#method-c-from_simulation_dir","(simulation_dir)","<p>Return an Array of FeatureReports for the simulation_dir as multiple Features can be simulated together …\n"],["get_data","URBANopt::Scenario::DefaultReports::TimeseriesCSV","URBANopt/Scenario/DefaultReports/TimeseriesCSV.html#method-i-get_data","(column_name)","<p>Gets data for each column name in the CSV file.\n<p>[parameters:]\n<code>column_name</code> - <em>String</em> - The header of each ...\n"],["in_osw","URBANopt::Scenario::SimulationDirOSW","URBANopt/Scenario/SimulationDirOSW.html#method-i-in_osw","()","<p>Return the input OSW\n"],["in_osw_path","URBANopt::Scenario::SimulationDirOSW","URBANopt/Scenario/SimulationDirOSW.html#method-i-in_osw_path","()","<p>Return the input OSW path\n"],["json_path","URBANopt::Scenario::DefaultReports::ScenarioReport","URBANopt/Scenario/DefaultReports/ScenarioReport.html#method-i-json_path","()","<p>Gets the saved JSON file path.\n"],["load_data","URBANopt::Scenario::DefaultReports::TimeseriesCSV","URBANopt/Scenario/DefaultReports/TimeseriesCSV.html#method-i-load_data","()","<p>Loads data from the CSV file.\n"],["load_mapper_files","URBANopt::Scenario::ScenarioCSV","URBANopt/Scenario/ScenarioCSV.html#method-i-load_mapper_files","()","<p>Require all simulation mappers in mapper_files_dir\n"],["logger","URBANopt::Scenario","URBANopt/Scenario.html#method-c-logger","()","<p>Definining class variable “@@logger” to log errors, info and warning messages.\n"],["logger","URBANopt::Scenario::DefaultReports","URBANopt/Scenario/DefaultReports.html#method-c-logger","()","<p>Definining class variable “@@logger” to log errors, info and warning messages.\n"],["max_value","URBANopt::Scenario::DefaultReports::Program","URBANopt/Scenario/DefaultReports/Program.html#method-i-max_value","(existing_value, new_value)","<p>Return the maximum value from <code>existing_value</code> and <code>new_value</code>.\n<p>[parameters:]\n <code>existing_value</code> - <em>Float</em> - A ...\n"],["measures_dir","URBANopt::Scenario::DefaultReports::Extension","URBANopt/Scenario/DefaultReports/Extension.html#method-i-measures_dir","()","<p>Returns the absolute path of the measures or nil if there is none, can be used when configuring OSWs …\n"],["measures_dir","URBANopt::Scenario::Extension","URBANopt/Scenario/Extension.html#method-i-measures_dir","()","<p>Returns the absolute path of the measures or nil if there is none, can be used when configuring OSWs …\n"],["merge_construction_cost","URBANopt::Scenario::DefaultReports::ConstructionCost","URBANopt/Scenario/DefaultReports/ConstructionCost.html#method-c-merge_construction_cost","(existing_cost, new_cost)","<p>Merges an <code>existing_cost</code> with a <code>new_cost</code>:\n- modify the existing_cost by summing the <code>:total_cost</code> and <code>:item_quantity</code> ...\n"],["merge_construction_costs","URBANopt::Scenario::DefaultReports::ConstructionCost","URBANopt/Scenario/DefaultReports/ConstructionCost.html#method-c-merge_construction_costs","(existing_costs, new_costs)","<p>Merges muliple construction costs together.\n- loops over the new_costs and find the index of the cost ...\n"],["merge_end_use!","URBANopt::Scenario::DefaultReports::EndUse","URBANopt/Scenario/DefaultReports/EndUse.html#method-i-merge_end_use-21","(new_end_use)","<p>Aggregate values of each EndUse attribute.\n<p>[Parameters:]\n<code>new_end_use</code> - <em>EndUse</em> - An object of EndUse class. ...\n"],["merge_end_uses!","URBANopt::Scenario::DefaultReports::EndUses","URBANopt/Scenario/DefaultReports/EndUses.html#method-i-merge_end_uses-21","(new_end_uses)","<p>Aggregates the values of each EndUse attribute.\n<p>[Parameters:]\n<code>new_end_uses</code> - <em>EndUses</em> - An object of EndUses ...\n"],["merge_reporting_period","URBANopt::Scenario::DefaultReports::ReportingPeriod","URBANopt/Scenario/DefaultReports/ReportingPeriod.html#method-c-merge_reporting_period","(existing_period, new_period)","<p>Merges an <code>existing_period</code> with a <code>new_period</code> if not nil.\n<p>[Parameters:]\n<code>existing_period</code> - <em>ReportingPeriod</em> ...\n"],["merge_reporting_periods","URBANopt::Scenario::DefaultReports::ReportingPeriod","URBANopt/Scenario/DefaultReports/ReportingPeriod.html#method-c-merge_reporting_periods","(existing_periods, new_periods)","<p>Merges multiple reporting periods together.\n- If <code>existing_periods</code> and <code>new_periods</code> ids are equal,<br>\nmodify ...\n"],["modrow","URBANopt::REopt::FeatureReportAdapter","URBANopt/REopt/FeatureReportAdapter.html#method-i-modrow","(x,i)",""],["modrow","URBANopt::REopt::ScenarioReportAdapter","URBANopt/REopt/ScenarioReportAdapter.html#method-i-modrow","(x,i)",""],["new","URBANopt::REopt::Extension","URBANopt/REopt/Extension.html#method-c-new","()","<p>Override parent class\n"],["new","URBANopt::REopt::FeatureReportAdapter","URBANopt/REopt/FeatureReportAdapter.html#method-c-new","()","<p>FeatureReportAdapter can convert a FeatureReport into a REopt Lite posts or update a FeatureReport from …\n"],["new","URBANopt::REopt::REoptLiteAPI","URBANopt/REopt/REoptLiteAPI.html#method-c-new","(nreldeveloperkey=nil, use_localhost=false)","<p>REoptLiteAPI manages submitting optimization tasks to the REopt Lite API and recieving results.\nResults ...\n"],["new","URBANopt::REopt::REoptRunner","URBANopt/REopt/REoptRunner.html#method-c-new","(developernrelgovkey=nil, localhost=false)","<p>REoptRunner updates a ScenarioReport or FeatureReport based on REopt Lite optimization response.\n<p>[parameters:] …\n"],["new","URBANopt::REopt::ScenarioReportAdapter","URBANopt/REopt/ScenarioReportAdapter.html#method-c-new","()","<p>ScenarioReportAdapter can convert a ScenarioReport into a REopt Lite posts or updates a ScenarioReport …\n"],["new","URBANopt::Scenario::DefaultReports::ConstructionCost","URBANopt/Scenario/DefaultReports/ConstructionCost.html#method-c-new","(hash = {})","<p>ConstructionCost class intialize all construction_cost attributes:\n<code>:category</code> , <code>:item_name</code> , <code>:unit_cost</code> ...\n"],["new","URBANopt::Scenario::DefaultReports::Date","URBANopt/Scenario/DefaultReports/Date.html#method-c-new","(hash = {})","<p>Date class intialize all date attributes:\n<code>:month</code> , <code>:day_of_month</code> , <code>:year</code>\n<p>[parameters:]\n<code>hash</code> - <em>Hash</em> -  ...\n"],["new","URBANopt::Scenario::DefaultReports::EndUse","URBANopt/Scenario/DefaultReports/EndUse.html#method-c-new","(hash = {})","<p>EndUse class intialize all enduse atributes: <code>:heating</code> , <code>:cooling</code> , <code>:interior_lighting</code> ,\n<code>:exterior_lighting</code> ...\n"],["new","URBANopt::Scenario::DefaultReports::EndUses","URBANopt/Scenario/DefaultReports/EndUses.html#method-c-new","(hash = {})","<p>EndUses class intialize end_uses(fuel type) attributes: <code>:electricity</code> , <code>:natural_gas</code> , <code>:additional_fuel</code> …\n"],["new","URBANopt::Scenario::DefaultReports::Extension","URBANopt/Scenario/DefaultReports/Extension.html#method-c-new","()","<p>Override parent class (OpenStudio::Extension::Extension)\n"],["new","URBANopt::Scenario::DefaultReports::FeatureReport","URBANopt/Scenario/DefaultReports/FeatureReport.html#method-c-new","(hash = {})","<p>Each FeatureReport object corresponds to a single Feature.\n<p>[parameters:]\n<code>hash</code> - <em>Hash</em> - A hash which may ...\n"],["new","URBANopt::Scenario::DefaultReports::Location","URBANopt/Scenario/DefaultReports/Location.html#method-c-new","(hash = {})","<p>Location class intialize location attributes: <code>:latitude</code> , <code>:longitude</code> , <code>:surface_elevation</code> , <code>:weather_filename</code> …\n"],["new","URBANopt::Scenario::DefaultReports::Program","URBANopt/Scenario/DefaultReports/Program.html#method-c-new","(hash = {})","<p>Program class intialize building program attributes: <code>:site_area</code> , <code>:floor_area</code> , <code>:conditioned_area</code> ,  …\n"],["new","URBANopt::Scenario::DefaultReports::ReportingPeriod","URBANopt/Scenario/DefaultReports/ReportingPeriod.html#method-c-new","(hash = {})","<p>ReportingPeriod class intializes the reporting period attributes:\n<code>:id</code> , <code>:name</code> , <code>:multiplier</code> , <code>:start_date</code> ...\n"],["new","URBANopt::Scenario::DefaultReports::ScenarioReport","URBANopt/Scenario/DefaultReports/ScenarioReport.html#method-c-new","(hash = {})","<p>ScenarioReport class intializes the scenario report attributes:\n<code>:id</code> , <code>:name</code> , <code>:directory_name</code>, <code>:timesteps_per_hour</code> ...\n"],["new","URBANopt::Scenario::DefaultReports::TimeseriesCSV","URBANopt/Scenario/DefaultReports/TimeseriesCSV.html#method-c-new","(hash = {})","<p>TimeseriesCSV class initializes timeseries csv attributes: <code>:path</code> , <code>:first_report_datetime</code> , <code>:column_names</code> …\n"],["new","URBANopt::Scenario::Extension","URBANopt/Scenario/Extension.html#method-c-new","()",""],["new","URBANopt::Scenario::REoptScenarioCSV","URBANopt/Scenario/REoptScenarioCSV.html#method-c-new","(name, root_dir, run_dir, feature_file, mapper_files_dir, csv_file, num_header_rows, reopt_files_dir=nil, scenario_reopt_assumptions_file_name=nil)","<p>REoptScenarioCSV is a ScenarioCSV which assigns a Simulation Mapper to each Feature in a FeatureFile …\n"],["new","URBANopt::Scenario::ScenarioBase","URBANopt/Scenario/ScenarioBase.html#method-c-new","(name, root_dir, run_dir, feature_file)","<p>Initialize ScenarioBase attributes: <code>name</code> , +root directory+ , +run directory+ and <code>feature_file</code>\n<p>[parameters:] …\n"],["new","URBANopt::Scenario::ScenarioCSV","URBANopt/Scenario/ScenarioCSV.html#method-c-new","(name, root_dir, run_dir, feature_file, mapper_files_dir, csv_file, num_header_rows, reopt_files_dir=nil, scenario_reopt_assumptions_file_name=nil)","<p>ScenarioCSV is a ScenarioBase which assigns a Simulation Mapper to each Feature in a FeatureFile using …\n"],["new","URBANopt::Scenario::ScenarioDatapoint","URBANopt/Scenario/ScenarioDatapoint.html#method-c-new","(scenario, feature_id, feature_name, mapper_class)","<p>ScenarioDatapoint is an agnostic description of the simulation of a Feature in a Scenario\nA Simulation ...\n"],["new","URBANopt::Scenario::ScenarioDefaultPostProcessor","URBANopt/Scenario/ScenarioDefaultPostProcessor.html#method-c-new","(scenario_base)","<p>ScenarioPostProcessorBase post-processes a scenario to create scenario level results\n<p>[parameters:]\n<code>scenario_base</code> ...\n"],["new","URBANopt::Scenario::ScenarioDefaultREoptPostProcessor","URBANopt/Scenario/ScenarioDefaultREoptPostProcessor.html#method-c-new","(scenario_base)","<p>ScenarioPostProcessorBase post-processes a scenario to create scenario level results. After run is executed …\n"],["new","URBANopt::Scenario::ScenarioPostProcessorBase","URBANopt/Scenario/ScenarioPostProcessorBase.html#method-c-new","(scenario_base)","<p>ScenarioPostProcessorBase post-processes a Scenario to create scenario level results.\n<p>[parameters:]\n<code>scenario_base</code> ...\n"],["new","URBANopt::Scenario::ScenarioRunnerBase","URBANopt/Scenario/ScenarioRunnerBase.html#method-c-new","()","<p>ScenarioRunnerBase is the agnostic interface for a class which can create and run SimulationFiles.\n"],["new","URBANopt::Scenario::ScenarioRunnerOSW","URBANopt/Scenario/ScenarioRunnerOSW.html#method-c-new","()","<p>ScenarioRunnerOSW is a class to create and run SimulationFileOSWs\n"],["new","URBANopt::Scenario::SimulationDirBase","URBANopt/Scenario/SimulationDirBase.html#method-c-new","(scenario, features, feature_names)","<p>SimulationDirBase is the agnostic representation of a directory of simulation input files.\n<p>[parameters:] …\n"],["new","URBANopt::Scenario::SimulationDirOSW","URBANopt/Scenario/SimulationDirOSW.html#method-c-new","(scenario, features, feature_names, mapper_class)","<p>SimulationDirOSW creates a OSW file to simulate features, a SimulationMapperBase is invoked to translate …\n"],["new","URBANopt::Scenario::SimulationMapperBase","URBANopt/Scenario/SimulationMapperBase.html#method-c-new","()","<p>perform initialization functions\n"],["out_of_date?","URBANopt::Scenario::ScenarioDatapoint","URBANopt/Scenario/ScenarioDatapoint.html#method-i-out_of_date-3F","()","<p>Return true if the datapoint is out of date, false otherwise. Non-existant files are out of date.\n<p>[return:] …\n"],["out_of_date?","URBANopt::Scenario::SimulationDirBase","URBANopt/Scenario/SimulationDirBase.html#method-i-out_of_date-3F","()","<p>Return true if the simulation is out of date (input files newer than results), false otherwise.\nNon-existant ...\n"],["out_of_date?","URBANopt::Scenario::SimulationDirOSW","URBANopt/Scenario/SimulationDirOSW.html#method-i-out_of_date-3F","()","<p>Return true if the simulation is out of date (input files newer than results), false otherwise.\nNon-existant ...\n"],["out_osw","URBANopt::Scenario::SimulationDirOSW","URBANopt/Scenario/SimulationDirOSW.html#method-i-out_osw","()","<p>Return the output OSW\n"],["out_osw_path","URBANopt::Scenario::SimulationDirOSW","URBANopt/Scenario/SimulationDirOSW.html#method-i-out_osw_path","()","<p>Return the output OSW path\n"],["reopt_json_from_feature_report","URBANopt::REopt::FeatureReportAdapter","URBANopt/REopt/FeatureReportAdapter.html#method-i-reopt_json_from_feature_report","(feature_report, reopt_assumptions_hash=nil)","<p>Convert a FeatureReport into a REopt Lite post\n[parameters:]\n<code>feature_report</code> - <em>FeatureReport</em> - FeatureReport ...\n"],["reopt_json_from_scenario_report","URBANopt::REopt::ScenarioReportAdapter","URBANopt/REopt/ScenarioReportAdapter.html#method-i-reopt_json_from_scenario_report","(scenario_report, reopt_assumptions_json=nil)","<p>Convert a ScenarioReport into a REopt Lite post\n[parameters:]\n<code>scenario_report</code> - <em>ScenarioReport</em> - ScenarioReport ...\n"],["reopt_jsons_from_scenario_feature_reports","URBANopt::REopt::ScenarioReportAdapter","URBANopt/REopt/ScenarioReportAdapter.html#method-i-reopt_jsons_from_scenario_feature_reports","(scenario_report, reopt_assumptions_hashes = [])","<p>Converts a FeatureReport list from a ScenarioReport into an array of REopt Lite posts\n[parameters:]\n ...\n"],["reopt_request","URBANopt::REopt::REoptLiteAPI","URBANopt/REopt/REoptLiteAPI.html#method-i-reopt_request","(reopt_input, filename)","<p>Completes a REopt Lite optimization. From a formatted hash, an optimization task is submitted to the …\n"],["run","URBANopt::Scenario::ScenarioDefaultPostProcessor","URBANopt/Scenario/ScenarioDefaultPostProcessor.html#method-i-run","()","<p>Run the post processor on this Scenario.This will add all the simulation_dirs.\n"],["run","URBANopt::Scenario::ScenarioDefaultREoptPostProcessor","URBANopt/Scenario/ScenarioDefaultREoptPostProcessor.html#method-i-run","()","<p>Run the post processor on this Scenario. This will add all the simulation_dirs and set the default paths …\n"],["run","URBANopt::Scenario::ScenarioPostProcessorBase","URBANopt/Scenario/ScenarioPostProcessorBase.html#method-i-run","()","<p>Run the post processor on this Scenario.\n"],["run","URBANopt::Scenario::ScenarioRunnerBase","URBANopt/Scenario/ScenarioRunnerBase.html#method-i-run","(scenario, force_clear = false)","<p>Create and run all SimulationFiles for Scenario.\n<p>[parameters:]\n<code>scenario</code> - <em>ScenarioBase</em> - Scenario to create ...\n"],["run","URBANopt::Scenario::ScenarioRunnerOSW","URBANopt/Scenario/ScenarioRunnerOSW.html#method-i-run","(scenario, force_clear = false)","<p>Create and run all SimulationFileOSW for Scenario.\nA staged runner is implented to run buildings, then ...\n"],["run_dir","URBANopt::Scenario::ScenarioDatapoint","URBANopt/Scenario/ScenarioDatapoint.html#method-i-run_dir","()","<p>Return the directory that this datapoint will run in.\n<p>[return:] <em>String</em> - Directory that this datapoint …\n"],["run_dir","URBANopt::Scenario::SimulationDirBase","URBANopt/Scenario/SimulationDirBase.html#method-i-run_dir","()","<p>Return the directory that this simulation will run in\n"],["run_dir","URBANopt::Scenario::SimulationDirOSW","URBANopt/Scenario/SimulationDirOSW.html#method-i-run_dir","()","<p>Return the directory that this simulation will run in.\n"],["run_dir_name","URBANopt::Scenario::DefaultReports::TimeseriesCSV","URBANopt/Scenario/DefaultReports/TimeseriesCSV.html#method-i-run_dir_name","(name)","<p>Gets run directory.\n<p>[parameters:]\n<code>name</code> - <em>String</em> - The name of the scenario (<code>directory_name</code>).\n"],["run_feature_report","URBANopt::REopt::REoptRunner","URBANopt/REopt/REoptRunner.html#method-i-run_feature_report","(feature_report, reopt_assumptions_hash=nil, reopt_output_file=nil,timeseries_csv_path=nil)","<p>Updates a FeatureReport based on an optional set of REopt Lite optimization assumptions.\n<p>[parameters:] …\n"],["run_feature_reports","URBANopt::REopt::REoptRunner","URBANopt/REopt/REoptRunner.html#method-i-run_feature_reports","(feature_reports, reopt_assumptions_hashes=[], reopt_output_files=[],timeseries_csv_paths=[])","<p>Updates a set of FeatureReports based on an optional set of REopt Lite optimization assumptions.\n<p>[parameters:] …\n"],["run_scenario_report","URBANopt::REopt::REoptRunner","URBANopt/REopt/REoptRunner.html#method-i-run_scenario_report","(scenario_report, reopt_assumptions_hash=nil, reopt_output_file=nil,timeseries_csv_path=nil)","<p>Updates a ScenarioReport based on an optional set of REopt Lite optimization assumptions.\n<p>[parameters:] …\n"],["run_scenario_report_features","URBANopt::REopt::REoptRunner","URBANopt/REopt/REoptRunner.html#method-i-run_scenario_report_features","(scenario_report, reopt_assumptions_hashes=[], reopt_output_files=[],feature_report_timeseries_csv_paths=[], scenario_report_timeseries_csv_path=nil)","<p>Updates a ScenarioReport based on an optional set of REopt Lite optimization assumptions.\n<p>[parameters:] …\n"],["save","URBANopt::Scenario::DefaultReports::ScenarioReport","URBANopt/Scenario/DefaultReports/ScenarioReport.html#method-i-save","()","<p>Saves the &#39;default_feature_report.json&#39; and &#39;default_scenario_report.csv&#39; files\n"],["save","URBANopt::Scenario::ScenarioDefaultPostProcessor","URBANopt/Scenario/ScenarioDefaultPostProcessor.html#method-i-save","()","<p>Save scenario result\n"],["save","URBANopt::Scenario::ScenarioPostProcessorBase","URBANopt/Scenario/ScenarioPostProcessorBase.html#method-i-save","()","<p>Save scenario result.\n"],["save_data","URBANopt::Scenario::DefaultReports::TimeseriesCSV","URBANopt/Scenario/DefaultReports/TimeseriesCSV.html#method-i-save_data","(path)","<p>Saves data to the the scenario report CSV file.\n<p>[parameters:]\n<code>path</code> - <em>String</em> - The path of the scenario ...\n"],["schema","URBANopt::Scenario::DefaultReports::Extension","URBANopt/Scenario/DefaultReports/Extension.html#method-i-schema","()","<p>return schema\n"],["schema_file","URBANopt::Scenario::DefaultReports::Extension","URBANopt/Scenario/DefaultReports/Extension.html#method-i-schema_file","()","<p>return path to schema file\n"],["schema_valid?","URBANopt::Scenario::DefaultReports::Extension","URBANopt/Scenario/DefaultReports/Extension.html#method-i-schema_valid-3F","()","<p>check if the schema is valid\n"],["schema_validation_errors","URBANopt::Scenario::DefaultReports::Extension","URBANopt/Scenario/DefaultReports/Extension.html#method-i-schema_validation_errors","()","<p>return detailed schema validation errors\n"],["simulation_dirs","URBANopt::Scenario::REoptScenarioCSV","URBANopt/Scenario/REoptScenarioCSV.html#method-i-simulation_dirs","()","<p>Gets all the simulation directories\n"],["simulation_dirs","URBANopt::Scenario::ScenarioBase","URBANopt/Scenario/ScenarioBase.html#method-i-simulation_dirs","()","<p>An array of SimulationDirBase objects.\n"],["simulation_dirs","URBANopt::Scenario::ScenarioCSV","URBANopt/Scenario/ScenarioCSV.html#method-i-simulation_dirs","()","<p>Gets all the simulation directories\n"],["simulation_status","URBANopt::Scenario::SimulationDirBase","URBANopt/Scenario/SimulationDirBase.html#method-i-simulation_status","()","<p>Returns simulation status one of {&#39;Not Started&#39;, &#39;Started&#39;, &#39;Complete&#39;, &#39;Failed&#39;} …\n"],["simulation_status","URBANopt::Scenario::SimulationDirOSW","URBANopt/Scenario/SimulationDirOSW.html#method-i-simulation_status","()","<p>Return simulation status one of {&#39;Not Started&#39;, &#39;Started&#39;, &#39;Complete&#39;, &#39;Failed&#39;} …\n"],["started_job_path","URBANopt::Scenario::SimulationDirOSW","URBANopt/Scenario/SimulationDirOSW.html#method-i-started_job_path","()","<p>Return the started.job path\n"],["to_hash","URBANopt::Scenario::DefaultReports::ConstructionCost","URBANopt/Scenario/DefaultReports/ConstructionCost.html#method-i-to_hash","()","<p>Converts to a Hash equivalent for JSON serialization.\n<p>Exclude attributes with nil values.\n<p>Validate construct_cost …\n"],["to_hash","URBANopt::Scenario::DefaultReports::Date","URBANopt/Scenario/DefaultReports/Date.html#method-i-to_hash","()","<p>Converts to a hash equivalent for JSON serialization.\n<p>Exclude attributes with nil values.\n<p>Validate date …\n"],["to_hash","URBANopt::Scenario::DefaultReports::EndUse","URBANopt/Scenario/DefaultReports/EndUse.html#method-i-to_hash","()","<p>Convert to a Hash equivalent for JSON serialization.\n<p>Exclude attributes with nil values.\n<p>Validate end_use …\n"],["to_hash","URBANopt::Scenario::DefaultReports::EndUses","URBANopt/Scenario/DefaultReports/EndUses.html#method-i-to_hash","()","<p>Converts to a Hash equivalent for JSON serialization.\n<p>Exclude attributes with nil values.\n<p>Validate end_uses …\n"],["to_hash","URBANopt::Scenario::DefaultReports::FeatureReport","URBANopt/Scenario/DefaultReports/FeatureReport.html#method-i-to_hash","()","<p>Convert to a Hash equivalent for JSON serialization\n<p>Exclude attributes with nil values.\n<p>Validate feature_report …\n"],["to_hash","URBANopt::Scenario::DefaultReports::Location","URBANopt/Scenario/DefaultReports/Location.html#method-i-to_hash","()","<p>Convert to a Hash equivalent for JSON serialization.\n<p>Exclude attributes with nil values.\n<p>Validate location …\n"],["to_hash","URBANopt::Scenario::DefaultReports::Program","URBANopt/Scenario/DefaultReports/Program.html#method-i-to_hash","()","<p>Convert to a Hash equivalent for JSON serialization.\n<p>Exclude attributes with nil values.\n<p>Validate program …\n"],["to_hash","URBANopt::Scenario::DefaultReports::ReportingPeriod","URBANopt/Scenario/DefaultReports/ReportingPeriod.html#method-i-to_hash","()","<p>Converts to a Hash equivalent for JSON serialization.\n<p>Exclude attributes with nil values.\n<p>Validate reporting_period …\n"],["to_hash","URBANopt::Scenario::DefaultReports::ScenarioReport","URBANopt/Scenario/DefaultReports/ScenarioReport.html#method-i-to_hash","()","<p>Converts to a Hash equivalent for JSON serialization.\n<p>Exclude attributes with nil values.\n<p>Validate reporting_period …\n"],["to_hash","URBANopt::Scenario::DefaultReports::TimeseriesCSV","URBANopt/Scenario/DefaultReports/TimeseriesCSV.html#method-i-to_hash","()","<p>Converts to a Hash equivalent for JSON serialization.\n<p>Exclude attributes with nil values.\n<p>Validate reporting_period …\n"],["update_feature_report","URBANopt::REopt::FeatureReportAdapter","URBANopt/REopt/FeatureReportAdapter.html#method-i-update_feature_report","(feature_report, reopt_output, timeseries_csv_path=nil)","<p>Update a FeatureReport from a REopt Lite response\n[parameters:]\n<code>feature_report</code> - <em>FeatureReport</em> - FeatureReport ...\n"],["update_scenario_report","URBANopt::REopt::ScenarioReportAdapter","URBANopt/REopt/ScenarioReportAdapter.html#method-i-update_scenario_report","(scenario_report, reopt_output, timeseries_csv_path=nil)","<p>Updates a ScenarioReport from a REopt Lite response\n[parameters:]\n<code>scenario_report</code> - <em>ScenarioReport</em> - ...\n"],["update_scenario_report_from_feature_reports","URBANopt::REopt::ScenarioReportAdapter","URBANopt/REopt/ScenarioReportAdapter.html#method-i-update_scenario_report_from_feature_reports","(scenario_report, feature_reports, timeseries_csv_path=nil)","<p>Updates a ScenarioReport from a set of FeatureReports\n[parameters:]\n<code>scenario_report</code> - <em>ScenarioReport</em> ...\n"],["uri_results","URBANopt::REopt::REoptLiteAPI","URBANopt/REopt/REoptLiteAPI.html#method-i-uri_results","(run_uuid)","<p>URL of the results end point for a specific optimization task\n<p>[parameters:]\n<code>run_uuid</code> - <em>String</em> - Unique ...\n"],["validate","URBANopt::Scenario::DefaultReports::Extension","URBANopt/Scenario/DefaultReports/Extension.html#method-i-validate","(schema, data)","<p>validate data against schema\n<p>[parameters:]\n<code>schema</code> - <em>Hash</em> - A hash of the JSON scenario_schema.\n<code>data</code> - ...\n"],["zerorow","URBANopt::REopt::ScenarioReportAdapter","URBANopt/REopt/ScenarioReportAdapter.html#method-i-zerorow","(x,i)",""],["RDOC_MAIN","","RDOC_MAIN_md.html","","<p>UrbanOpt REopt Gem\n<p>back to main docs\n<p>I can be edited from RDOC_MAIN.md\n"],["scenario_csv_columns","","lib/urbanopt/scenario/default_reports/schema/scenario_csv_columns_txt.html","","<p>Electricity:Facility \n<p>ElectricityProduced:Facility \n<p>Gas:Facility \n"],["scenario_schema.json","","lib/urbanopt/scenario/default_reports/schema/scenario_schema_json.html","","<p>{\n\n<pre>&quot;$schema&quot;: &quot;http://json-schema.org/draft-04/schema#&quot;,\n&quot;description&quot;: &quot;Comment describing your JSON Schema&quot;, ...</pre>\n"],["npm-debug.log","","npm-debug_log.html","","<p>0 info it worked if it ends with ok 1 verbose cli [ &#39;/usr/local/bin/node&#39;, 1 verbose cli   &#39;/usr/local/bin/npm&#39;, …\n"],["package-lock.json","","package-lock_json.html","","<p>{\n\n<pre>&quot;requires&quot;: true,\n&quot;lockfileVersion&quot;: 1,\n&quot;dependencies&quot;: {\n  &quot;@babel/helper-module-imports&quot;: {\n    &quot;version&quot;: ...</pre>\n"]]}}